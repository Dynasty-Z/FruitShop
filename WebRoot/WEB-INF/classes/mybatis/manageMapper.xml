<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.study.mapper.ManageMapper">
	<resultMap type="com.study.po.Manage" id="baseResult">
		<id property="id" column="id" jdbcType="int" />
		<result  property="userName" column="userName" />
		<result  property="passWord" column="passWord" />
		<result  property="realName" column="realName" />
	</resultMap>

	<sql id="manage_field">
		id,userName,passWord,realName
	</sql>
	
	<sql id="manage_insert">
		#{id},#{userName},#{passWord},#{realName}
	</sql>
	
	 <!-- 更新结果  -->
    <sql id="Manage_update">
        <if test="userName != null">
            userName = #{userName},
        </if>
        <if test="passWord != null">
            passWord = #{passWord},
        </if>
        <if test="realName != null">
            realName = #{realName}
        </if>
    </sql>
	
	<sql id="manage_where">
		<if test="id != null">
			id = #{id}
		</if>
		<if test="userName != null">
			,userName = #{userName}
		</if>
		<if test="passWord != null">
			,passWord = #{passWord}
		</if>
		<if test="realName != null">
			,realName = #{realName}
		</if>
	</sql>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert into manage(<include refid="manage_field"></include>) values(<include refid="manage_insert"></include>)
	</insert>
	
	<delete id="deleteById" >
		delete from manage where id=#{id}
	</delete>
	
	<delete id="deleteByEntity" >
		delete from manage where 1=1
		and 
		<include refid="manage_where"></include>
	</delete>
	
	<delete id="deleteByMap" >
		delete from manage where 1=1
		and 
		<include refid="manage_where"></include>
	</delete>
	
	 <!-- 更新一个实体 -->
    <update id="update" parameterType="com.study.po.Manage">
        update manage
        <set>
            <include refid="Manage_update"/>
        </set>
        where 1=1
            <include refid="Manage_where"/>
    </update>

    <!-- 通过id进行修改-->
    <update id="updateById" parameterType="com.study.po.Manage">
        update manage
        <set>
            <include refid="Manage_update"/>
        </set>
        where id=#{id}
    </update>

    <!-- 根据参数查询-->
    <select id="listByMap" resultMap="ResultMapManage" parameterType="map">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapManage">
        select <include refid="Manage_field"/>
        from manage
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体-->
    <select id="listAllByEntity" resultMap="ResultMapManage" parameterType="com.study.po.Manage">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="load" resultMap="ResultMapManage" parameterType="java.lang.Integer">
        select <include refid="Manage_field"/>
        from manage where id=#{id}
    </select>

    <!-- 根据主键获取一个实体-->
    <select id="getById" resultMap="ResultMapManage" parameterType="java.lang.Integer">
        select <include refid="Manage_field"/>
        from manage where id=#{id}
    </select>

    <!-- 通过map查询-->
    <select id="getByMap" resultMap="ResultMapManage" parameterType="map">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!--通过对象查询-不分页-->
    <select id="getByEntity" resultMap="ResultMapManage" parameterType="com.study.po.Manage">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!-- 通过map查询分页-->
    <select id="findByMap" resultMap="ResultMapManage" parameterType="map">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!--通过对象查询分页-->
    <select id="findByEntity" resultMap="ResultMapManage" parameterType="com.study.po.Manage">
        select <include refid="Manage_field"/>
        from manage where 1=1
        <include refid="Manage_where"/>
    </select>

    <!-- 批量新增-->
    <select id="insertBatch" parameterType="java.util.List">
        insert into manage(
        <include refid="Manage_field"/>
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userName},#{item.passWord},#{item.realName})
        </foreach>
    </select>

    <!-- 批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update manage
            <set>
                <if test="item.userName != null">
                    userName = #{item.userName},
                </if>
                <if test="item.passWord != null">
                    passWord = #{item.passWord},
                </if>
                <if test="item.realName != null">
                    realName = #{item.realName}
                </if>
            </set>
            where 1=1
            <if test="item.id != null">
               and id = #{item.id}
            </if>
        </foreach>
    </update>

    <!-- 封装纯sql语法-->
    <!-- 查询一个对象返回map-->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="ResultMapManage">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表-->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="ResultMapManage">
        ${sql}
    </select>

    <!-- 查询分页-->
    <select id="findBySqlRerturnEntity" resultMap="ResultMapManage">
        ${sql}
    </select>

    <!-- 通过sql修改-->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除-->
    <delete id="deleteBySql">
         ${sql}
    </delete>
	
</mapper>